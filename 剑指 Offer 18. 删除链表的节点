给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。

返回删除后的链表的头节点。

注意：此题对比原题有改动

示例 1:

输入: head = [4,5,1,9], val = 5
输出: [4,1,9]
解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9.
示例 2:

输入: head = [4,5,1,9], val = 1
输出: [4,5,9]
解释: 给定你链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -> 5 -> 9.

执行结果：通过

执行用时：0 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗：38.2 MB, 在所有 Java 提交中击败了50.41%的用户

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode deleteNode(ListNode head, int val) {
        //1.定义哑节点避免头节点删除的情况
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode node = dummy;
        //2.遍历找到需要删除的节点
        while(node.next.val!=val){
            node = node.next;
        }
        //3.替换删除该节点
        if(node.next.next==null){
            node.next = null;
        }
        else{
            node.next.val = node.next.next.val;
            node.next = node.next.next;
        }
        return dummy.next;
    }
}
