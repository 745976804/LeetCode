剑指 Offer 58 - II. 左旋转字符串
字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串"abcdefg"和数字2，该函数将返回左旋转两位得到的结果"cdefgab"。

示例 1：

输入: s = "abcdefg", k = 2
输出: "cdefgab"
示例 2：

输入: s = "lrloseumgh", k = 6
输出: "umghlrlose"

class Solution {
    public String reverseLeftWords(String s, int n) {
        //1.字符串切片函数
        return s.substring(n,s.length()) + s.substring(0,n);
        

        /*
        2.通过StringBuilder的可变字符串来逐个进行添加
        StringBuilder res = new StringBuilder();
        for(int i=n;i<s.length();i++)
            res.append(s.charAt(i));
        for(int i=0;i<n;i++)
            res.append(s.charAt(i));
        return res.toString();

        StringBuilder res = new StringBuilder();
        for(int i=n;i<s.length() + n;i++)
            res.append(s.charAt(i) % s.length());
        return res.toString();
        */

        /*
        3.需要申请多个字符串空间，效率较低
        String res = "";
        for(int i = n; i < n + s.length(); i++)
            res += s.charAt(i % s.length());
        return res;
        */
    }
}

总结：
    方法1：只需要拼接一次字符串，效率较高
    
    方法2：需要逐个进行添加元素，效率较低
    
    方法3：需要申请多个字符串空间，效率最低
    
知识点：
    1.字符串切割函数
    
    2.字符串拼接
    
    3.取余减少for循环代码的方法
